<solidity>
  <k>
    .K
  </k>
  <current-body>
    IfTest
  </current-body>
  <ifaces>
    .IfaceCellMap
  </ifaces>
  <contracts>
    <contract>
      <contract-id>
        IfTest
      </contract-id>
      <contract-state>
        .Map
      </contract-state>
      <contract-init>
        .List
      </contract-init>
      <contract-fns>
        <contract-fn>
          <contract-fn-id>
            constructor
          </contract-fn-id>
          <contract-fn-visibility>
            public
          </contract-fn-visibility>
          <contract-fn-arg-types>
            .List
          </contract-fn-arg-types>
          <contract-fn-param-names>
            .List
          </contract-fn-param-names>
          <contract-fn-return-types>
            .List
          </contract-fn-return-types>
          <contract-fn-return-names>
            .List
          </contract-fn-return-names>
          <contract-fn-payable>
            false
          </contract-fn-payable>
          <contract-fn-body>
            bool x = true ;  bool y = false ;  if ( x ) { y = true ;  .Statements } else { require ( false , "" , .TypedVals ) ;  .Statements }  require ( y , "" , .TypedVals ) ;  y = false ;  x = false ;  if ( x ) { require ( false , "" , .TypedVals ) ;  .Statements } else { y = true ;  .Statements }  require ( y , "" , .TypedVals ) ;  if ( x ) { require ( false , "" , .TypedVals ) ;  .Statements }  .Statements
          </contract-fn-body>
        </contract-fn>
      </contract-fns>
      <contract-events>
        .ContractEventCellMap
      </contract-events>
    </contract>
  </contracts>
  <exec>
    <msg-sender>
      1p160
    </msg-sender>
    <msg-value>
      0p256
    </msg-value>
    <tx-origin>
      1p160
    </tx-origin>
    <block-timestamp>
      0p256
    </block-timestamp>
    <this>
      2p160
    </this>
    <this-type>
      IfTest
    </this-type>
    <env>
      x |-> var ( 0 , bool )
      y |-> var ( 1 , bool )
    </env>
    <store>
      0 |-> false
      1 |-> true
    </store>
    <call-stack>
      .List
    </call-stack>
    <live-contracts>
      <live-contract>
        <contract-address>
          2p160
        </contract-address>
        <contract-type>
          IfTest
        </contract-type>
        <contract-storage>
          .Map
        </contract-storage>
      </live-contract>
    </live-contracts>
    <events>
      .List
    </events>
    <next-address>
      3p160
    </next-address>
  </exec>
</solidity>
