<solidity>
  <k>
    .K
  </k>
  <summarize>
    false
  </summarize>
  <compile>
    <current-body>
      ForTest
    </current-body>
    <ifaces>
      .IfaceCellMap
    </ifaces>
    <contracts>
      <contract>
        <contract-id>
          ForTest
        </contract-id>
        <contract-state>
          .Map
        </contract-state>
        <contract-init>
          .List
        </contract-init>
        <contract-fns>
          <contract-fn>
            <contract-fn-id>
              constructor
            </contract-fn-id>
            <contract-fn-visibility>
              public
            </contract-fn-visibility>
            <contract-fn-arg-types>
              .List
            </contract-fn-arg-types>
            <contract-fn-param-names>
              .List
            </contract-fn-param-names>
            <contract-fn-return-types>
              .List
            </contract-fn-return-types>
            <contract-fn-return-names>
              .List
            </contract-fn-return-names>
            <contract-fn-payable>
              false
            </contract-fn-payable>
            <contract-fn-body>
              uint256 x = 5 ;  uint256 y = 0 ;  { uint256 x = 0 ;  while ( x < 10 ) { { y = y + 2 ;  .Statements }  x = x + 1 ;  .Statements }  .Statements }  require ( y == 20 , "" , .TypedVals ) ;  require ( x == 5 , "" , .TypedVals ) ;  .Statements
            </contract-fn-body>
          </contract-fn>
        </contract-fns>
        <contract-events>
          .ContractEventCellMap
        </contract-events>
      </contract>
    </contracts>
  </compile>
  <exec>
    <msg-sender>
      1p160
    </msg-sender>
    <msg-value>
      0p256
    </msg-value>
    <tx-origin>
      1p160
    </tx-origin>
    <block-timestamp>
      0p256
    </block-timestamp>
    <this>
      2p160
    </this>
    <this-type>
      ForTest
    </this-type>
    <env>
      x |-> var ( 0 , uint256 )
      y |-> var ( 1 , uint256 )
    </env>
    <store>
      ListItem ( 5p256 )
      ListItem ( 20p256 )
      ListItem ( 10p256 )
    </store>
    <current-function>
      constructor
    </current-function>
    <call-stack>
      .List
    </call-stack>
    <live-contracts>
      <live-contract>
        <contract-address>
          2p160
        </contract-address>
        <contract-type>
          ForTest
        </contract-type>
        <contract-storage>
          .Map
        </contract-storage>
      </live-contract>
    </live-contracts>
    <next-address>
      3p160
    </next-address>
  </exec>
</solidity>
